{"version":3,"sources":["utils/api.js","utils/candidateStatusUtils.js","Redux/actions/candidates.js","Redux/constants.js","Redux/actions/modals.js","Components/Candidates/Candidate.jsx","Components/common/Modal/Modal.jsx","Components/Candidates/CandidateInfoModal.jsx","utils/dateFormatter.js","Components/Candidates/CandidatesFiltersModal.jsx","Components/Candidates/Index.jsx","Containers/Candidates.container.js","App.jsx","serviceWorker.js","Redux/reducers/candidates.js","Redux/reducers/modals.js","Redux/reducers/rootReducer.js","Redux/store.js","index.jsx"],"names":["api","axios","get","params","nat","results","statuses","0","numeric","lingual","1","2","randomizeStatus","randomizer","parseInt","Math","random","getCandidates","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","sent","type","payload","data","abrupt","t0","console","error","stop","this","_x","apply","arguments","setCandidatesRandomStatuses","_ref2","_callee2","getState","candidates","modifiedCandidates","_context2","map","candidate","candidateCopy","objectSpread","status","_x2","_x3","modifyCandidateStatus","name","direction","_ref3","_callee3","candidateToBeUpdated","modifiedCandidatesList","_context3","find","concat","first","last","log","message","toConsumableArray","filter","t1","_x4","_x5","getCandidatesFilters","filters","JSON","parse","localStorage","getItem","city","setItem","stringify","filtersState","setCandidatesFilters","filtersJSON","toggleModalVisibility","modal","length","undefined","modalState","modals","visible","Candidate","thumbNail","toggleInfoModal","modifyStatus","e","target","dataset","react_default","createElement","className","src","alt","data-direction","onClick","index_es","icon","faInfoCircle","Modal","_this$props","props","children","toggleModal","Component","CandidateInfoModal","picture","medium","faEnvelope","email","faPhone","cell","faCalendarDay","dateString","date","Date","day","getDate","slice","month","getMonth","year","getFullYear","dateFormatter","dob","faMapMarkerAlt","location","faClock","CandidatesFiltersModal","state","handleInputChange","_this","setState","defineProperty","value","setFilters","preventDefault","clearFilters","_this$props$filters","_this$state","placeholder","onChange","Candidates","toggleCandidateInfoModal","_this2","isCandidateModalVisible","candidateModalData","candidatesReadyState","isFiltersModalVisible","filtersModalData","candidatesFilters","filteredCandidates","includes","toLowerCase","Candidates_Candidate","key","thumbnail","faFilter","common_Modal_Modal","Candidates_CandidateInfoModal","Candidates_CandidatesFiltersModal","connect","readyState","candidateInfo","bindActionCreators","App","Candidates_container","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialState","combineReducers","action","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","store","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.35daac93.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default {\n  getCandidates: () => axios.get('https://randomuser.me/api/', {\n    params: {\n      nat: 'gb',\n      results: 5,\n    },\n  }),\n};\n","export const statuses = {\n  0: {\n    numeric: 0,\n    lingual: 'Applied',\n  },\n  1: {\n    numeric: 1,\n    lingual: 'Interviewing',\n  },\n  2: {\n    numeric: 2,\n    lingual: 'Hired',\n  },\n};\n\nexport const randomizeStatus = () => {\n  const randomizer = parseInt(Math.random() * 3, 10);\n  return statuses[randomizer];\n};\n","import api from '../../utils/api';\nimport {\n  GET_CANDIDATES,\n  SET_CANDIDATES_RANDOM_STATUSES,\n  CONFIRM_CANDIDATES_READY_STATE,\n  MODIFY_CANDIDATE_STATUS,\n  GET_CANDIDATES_FILTERS,\n  SET_CANDIDATES_FILTERS,\n} from '../constants';\nimport { statuses, randomizeStatus } from '../../utils/candidateStatusUtils';\n\nexport const getCandidates = () => async (dispatch) => {\n  try {\n    const res = await api.getCandidates();\n    await dispatch({\n      type: GET_CANDIDATES,\n      payload: res.data.results,\n    });\n    return res;\n  } catch (e) {\n    console.error(e);\n    return 'error';\n  }\n};\n\nexport const setCandidatesRandomStatuses = () => async (dispatch, getState) => {\n  const { candidates } = getState().candidates;\n  const modifiedCandidates = candidates.map((candidate) => {\n    const candidateCopy = { ...candidate };\n    candidateCopy.status = randomizeStatus();\n    return candidateCopy;\n  });\n  await dispatch({\n    type: SET_CANDIDATES_RANDOM_STATUSES,\n    payload: modifiedCandidates,\n  });\n  await dispatch({\n    type: CONFIRM_CANDIDATES_READY_STATE,\n  });\n  return true;\n};\n\nexport const modifyCandidateStatus = (name, direction) => async (dispatch, getState) => {\n  const { candidates } = getState().candidates;\n  const candidateToBeUpdated = candidates.find(candidate => `${candidate.name.first} ${candidate.name.last}` === name);\n  console.log();\n  try {\n    switch (direction) {\n      case 'prev':\n        candidateToBeUpdated.status = statuses[candidateToBeUpdated.status.numeric - 1];\n        break;\n      case 'next':\n        candidateToBeUpdated.status = statuses[candidateToBeUpdated.status.numeric + 1];\n        break;\n      default:\n        throw { message: `${direction} is not an option for status modification` };\n    }\n\n    const modifiedCandidatesList = [...candidates\n      .filter(candidate => `${candidate.name.first} ${candidate.name.last}` !== name),\n    candidateToBeUpdated,\n    ];\n    await dispatch({\n      type: MODIFY_CANDIDATE_STATUS,\n      payload: modifiedCandidatesList,\n    });\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport const getCandidatesFilters = () => (dispatch, getState) => {\n  let filters = JSON.parse(localStorage.getItem('filters'));\n  if (!filters) {\n    filters = { name: '', city: '' };\n    localStorage.setItem('filters', JSON.stringify(filters));\n  }\n  const filtersState = getState().candidates.filters;\n  if (filters.name !== filtersState.name || filters.city !== filtersState.city) {\n    dispatch({\n      type: GET_CANDIDATES_FILTERS,\n      payload: filters,\n    });\n  }\n  return filters;\n};\n\nexport const setCandidatesFilters = filters => (dispatch) => {\n  const filtersJSON = JSON.stringify(filters);\n  localStorage.setItem('filters', filtersJSON);\n  dispatch({\n    type: SET_CANDIDATES_FILTERS,\n    payload: filters,\n  });\n};\n","export const GET_CANDIDATES = 'candidates/GET_CANDIDATES';\nexport const SET_CANDIDATES_RANDOM_STATUSES = 'candidates/SET_CANDIDATES_RANDOM_STATUSES';\nexport const CONFIRM_CANDIDATES_READY_STATE = 'candidates/CONFIRM_CANDIDATES_READY_STATE';\nexport const MODIFY_CANDIDATE_STATUS = 'candidates/MODIFY_CANDIDATE_STATUS';\nexport const GET_CANDIDATES_FILTERS = 'candidates/GET_CANDIDATES_FILTERS';\nexport const SET_CANDIDATES_FILTERS = 'candidates/SET_CANDIDATES_FILTERS';\n\n\nexport const TOGGLE_MODAL_VISIBILITY = 'modals/TOGGLE_MODAL_VISIBILITY';\n","import { TOGGLE_MODAL_VISIBILITY } from '../constants';\n\nexport const toggleModalVisibility = (modal, data = {}) => (dispatch, getState) => {\n  const modalState = getState().modals[modal].visible;\n  dispatch({\n    type: TOGGLE_MODAL_VISIBILITY,\n    payload: {\n      modal,\n      modalState: !modalState,\n      data,\n    },\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Candidate = (\n  {\n    thumbNail,\n    name,\n    candidate,\n    modifyCandidateStatus,\n    toggleInfoModal,\n  },\n) => {\n  const toggleModal = () => {\n    toggleInfoModal(candidate);\n  };\n\n  const modifyStatus = (e) => {\n    modifyCandidateStatus(name, e.target.dataset.direction);\n  };\n\n  return (\n    <div className=\"candidate\">\n      <img src={thumbNail} alt=\"thumbnail\" className=\"candidate__photo\" />\n      <p className=\"candidate__name\">{name}</p>\n      <div className=\"candidate__controls\">\n        {candidate.status.lingual !== 'Applied'\n        && (\n          <button\n            type=\"button\"\n            data-direction=\"prev\"\n            className=\"candidate__controls--change-stage candidate__controls--change-stage_prev\"\n            onClick={modifyStatus}\n          />\n        )}\n        <button\n          type=\"button\"\n          className=\"candidate__controls--more-info\"\n          onClick={toggleModal}\n        >\n          <FontAwesomeIcon icon={faInfoCircle} />\n        </button>\n\n        {candidate.status.lingual !== 'Hired'\n        && (\n          <button\n            type=\"button\"\n            data-direction=\"next\"\n            className=\"candidate__controls--change-stage candidate__controls--change-stage_next\"\n            onClick={modifyStatus}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nCandidate.propTypes = {\n  thumbNail: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  candidate: PropTypes.object.isRequired,\n  toggleInfoModal: PropTypes.func.isRequired,\n  modifyCandidateStatus: PropTypes.func.isRequired,\n};\n\nexport default Candidate;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n  render() {\n    const { children, toggleModal } = this.props;\n    return (\n      <div className=\"modal\">\n        <div className=\"modal__inner\">\n          <button\n            type=\"button\"\n            className=\"modal__inner--close-button\"\n            onClick={toggleModal}\n          >\n            X\n          </button>\n          <div className=\"modal__inner--content\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEnvelope,\n  faPhone,\n  faCalendarDay,\n  faClock,\n  faMapMarkerAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport dateFormatter from '../../utils/dateFormatter';\n\n\nconst CandidateInfoModal = ({ candidate }) => (\n  <div className=\"candidate-info\">\n    <img src={candidate.picture.medium} alt=\"\" className=\"candidate-info__photo\" />\n    <h3 className=\"candidate-info__name\">{`${candidate.name.first} ${candidate.name.last}`}</h3>\n    <p className=\"candidate-info__paragraph\">\n      <span><FontAwesomeIcon icon={faEnvelope} /></span>\n      {' '}\n      {candidate.email}\n    </p>\n    <p className=\"candidate-info__paragraph\">\n      <span><FontAwesomeIcon icon={faPhone} /></span>\n      {' '}\n      {candidate.cell}\n    </p>\n    <p className=\"candidate-info__paragraph\">\n      <span><FontAwesomeIcon icon={faCalendarDay} /></span>\n      {' '}\n      {dateFormatter(candidate.dob.date)}\n    </p>\n    <p className=\"candidate-info__paragraph\">\n      <span><FontAwesomeIcon icon={faMapMarkerAlt} /></span>\n      {' '}\n      {candidate.location.city}\n    </p>\n    <p className=\"candidate-info__paragraph\">\n      <span><FontAwesomeIcon icon={faClock} /></span>\n      {' '}\n      {candidate.status.lingual}\n    </p>\n  </div>\n);\n\nCandidateInfoModal.propTypes = {\n  candidate: PropTypes.object.isRequired,\n};\n\nexport default CandidateInfoModal;\n","export default (dateString) => {\n  const date = new Date(dateString);\n  const day = (`0${date.getDate()}`).slice(-2);\n  const month = (`0${date.getMonth() + 1}`).slice(-2);\n  const year = date.getFullYear();\n  return `${day}-${month}-${year}`;\n};\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CandidatesFiltersModal extends Component {\r\n  state = {\r\n    name: '',\r\n    city: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {name, city} = this.props.filters;\r\n    this.setState({\r\n      name,\r\n      city\r\n    })\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  };\r\n\r\n  setFilters = e => {\r\n    e.preventDefault();\r\n    this.props.setCandidatesFilters(this.state);\r\n    this.props.toggleModal();\r\n  };\r\n\r\n  clearFilters = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: '',\r\n      city: ''\r\n    }, () => this.props.setCandidatesFilters(this.state));\r\n  };\r\n\r\n  render() {\r\n    const {name, city} = this.state;\r\n\r\n    return (\r\n      <div className=\"candidates-filters\">\r\n        <h3 className=\"candidates-filters__caption\">Set Filters</h3>\r\n        <form className=\"candidates-filters__form\">\r\n          <input\r\n            value={name}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className=\"candidates-filters__form--input\"\r\n            placeholder=\"Name\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <input\r\n            value={city}\r\n            name=\"city\"\r\n            type=\"text\"\r\n            placeholder=\"City\"\r\n            className=\"candidates-filters__form--input\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"candidates-filters__form--btn\"\r\n            onClick={this.clearFilters}\r\n          >\r\n            Clear\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"candidates-filters__form--btn\"\r\n            onClick={this.setFilters}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCandidatesFiltersModal.propTypes = {\r\n  filters: PropTypes.object.isRequired,\r\n  setCandidatesFilters: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CandidatesFiltersModal;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Candidate from './Candidate';\nimport Modal from '../common/Modal/Modal';\nimport CandidateInfoModal from './CandidateInfoModal';\nimport CandidatesFiltersModal from './CandidatesFiltersModal';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFilter} from '@fortawesome/free-solid-svg-icons';\n\n\nclass Candidates extends Component {\n  async componentDidMount() {\n    await this.props.getCandidates();\n    await this.props.setCandidatesRandomStatuses();\n    await this.props.getCandidatesFilters();\n  };\n\n  toggleCandidateInfoModal = (candidate) => {\n    this.props.toggleModalVisibility('candidateInfo', candidate);\n  };\n\n  render() {\n    const {\n      candidates,\n      isCandidateModalVisible,\n      candidateModalData,\n      candidatesReadyState,\n      modifyCandidateStatus,\n      isFiltersModalVisible,\n      filtersModalData,\n      candidatesFilters\n    } = this.props;\n\n    const filteredCandidates = candidates\n      .filter(candidate =>\n        `${candidate.name.first} ${candidate.name.last}`.includes(candidatesFilters.name.toLowerCase())\n        &&\n        candidate.location.city.includes(candidatesFilters.city.toLowerCase())\n      );\n\n    return (\n      <div className=\"candidates-lists\">\n        <div className=\"candidates-lists__list candidates-lists__list_applied\">\n          <div className=\"candidates-lists__list--caption\">Applied</div>\n          {candidatesReadyState && filteredCandidates\n            .filter(candidate => candidate.status.lingual === 'Applied')\n            .map(candidate => (\n              <Candidate\n                key={`candidate-${candidate.email}`}\n                thumbNail={candidate.picture.thumbnail}\n                name={`${candidate.name.first} ${candidate.name.last}`}\n                candidate={candidate}\n                toggleInfoModal={this.toggleCandidateInfoModal}\n                modifyCandidateStatus={modifyCandidateStatus}\n              />\n            ))}\n        </div>\n        <div className=\"candidates-lists__list candidates-lists__list_interviewing\">\n          <div className=\"candidates-lists__list--caption\">Interviewing</div>\n          {candidatesReadyState && filteredCandidates\n            .filter(candidate => candidate.status.lingual === 'Interviewing')\n            .map(candidate => (\n              <Candidate\n                key={`candidate-${candidate.email}`}\n                thumbNail={candidate.picture.thumbnail}\n                name={`${candidate.name.first} ${candidate.name.last}`}\n                candidate={candidate}\n                toggleInfoModal={this.toggleCandidateInfoModal}\n                modifyCandidateStatus={modifyCandidateStatus}\n              />\n            ))}\n        </div>\n        <div className=\"candidates-lists__list candidates-lists__list_hired\">\n          <div className=\"candidates-lists__list--caption\">Hired</div>\n          {candidatesReadyState && filteredCandidates\n            .filter(candidate => candidate.status.lingual === 'Hired')\n            .map(candidate => (\n              <Candidate\n                key={`candidate-${candidate.email}`}\n                thumbNail={candidate.picture.thumbnail}\n                name={`${candidate.name.first} ${candidate.name.last}`}\n                candidate={candidate}\n                toggleInfoModal={this.toggleCandidateInfoModal}\n                modifyCandidateStatus={modifyCandidateStatus}\n              />\n            ))}\n        </div>\n        <button\n          className=\"candidates-lists__filter-button\"\n          onClick={() => this.props.toggleModalVisibility('candidatesFilters', this.props.getCandidatesFilters())}\n        >\n          <FontAwesomeIcon icon={faFilter}/>\n        </button>\n        {isCandidateModalVisible &&\n        <Modal toggleModal={() => this.props.toggleModalVisibility('candidateInfo')}>\n          <CandidateInfoModal\n            candidate={candidateModalData}\n          />\n        </Modal>}\n\n        {isFiltersModalVisible &&\n        <Modal toggleModal={() => this.props.toggleModalVisibility('candidatesFilters')}>\n          <CandidatesFiltersModal\n            filters={filtersModalData}\n            setCandidatesFilters={this.props.setCandidatesFilters}\n            toggleModal={() => this.props.toggleModalVisibility('candidatesFilters')}\n          />\n        </Modal>\n        }\n      </div>\n    );\n  }\n}\n\nCandidates.propTypes = {\n  candidates: PropTypes.array.isRequired,\n  candidatesReadyState: PropTypes.bool.isRequired,\n  isCandidateModalVisible: PropTypes.bool.isRequired,\n  candidateModalData: PropTypes.object.isRequired,\n  isFiltersModalVisible: PropTypes.bool.isRequired,\n  filtersModalData: PropTypes.object.isRequired,\n  candidatesFilters: PropTypes.object.isRequired,\n  getCandidates: PropTypes.func.isRequired,\n  setCandidatesRandomStatuses: PropTypes.func.isRequired,\n  modifyCandidateStatus: PropTypes.func.isRequired,\n  toggleModalVisibility: PropTypes.func.isRequired,\n  getCandidatesFilters: PropTypes.func.isRequired,\n  setCandidatesFilters: PropTypes.func.isRequired,\n};\n\nexport default Candidates;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  getCandidates,\n  setCandidatesRandomStatuses,\n  modifyCandidateStatus,\n  getCandidatesFilters,\n  setCandidatesFilters,\n} from '../Redux/actions/candidates';\nimport { toggleModalVisibility } from '../Redux/actions/modals';\nimport Candidates from '../Components/Candidates/Index';\n\nconst mapStateToProps = ({ candidates, modals }) => ({\n  candidates: candidates.candidates,\n  candidatesReadyState: candidates.readyState,\n  candidatesFilters: candidates.filters,\n  isCandidateModalVisible: modals.candidateInfo.visible,\n  candidateModalData: modals.candidateInfo.data,\n  isFiltersModalVisible: modals.candidatesFilters.visible,\n  filtersModalData: modals.candidatesFilters.data,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getCandidates,\n  setCandidatesRandomStatuses,\n  modifyCandidateStatus,\n  toggleModalVisibility,\n  getCandidatesFilters,\n  setCandidatesFilters,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Candidates);\n","import React from 'react';\nimport Candidates from './Containers/Candidates.container';\n\n\nconst App = () => (\n  <Candidates />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_CANDIDATES,\n  SET_CANDIDATES_RANDOM_STATUSES,\n  CONFIRM_CANDIDATES_READY_STATE,\n  MODIFY_CANDIDATE_STATUS,\n  GET_CANDIDATES_FILTERS,\n  SET_CANDIDATES_FILTERS,\n} from '../constants';\n\nconst initialState = {\n  candidates: [],\n  readyState: false,\n  filters: {\n    name: '',\n    city: '',\n  },\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CANDIDATES:\n      return {\n        ...state,\n        candidates: action.payload,\n      };\n\n    case SET_CANDIDATES_RANDOM_STATUSES:\n      return {\n        ...state,\n        candidates: action.payload,\n      };\n\n    case CONFIRM_CANDIDATES_READY_STATE:\n      return {\n        ...state,\n        readyState: true,\n      };\n\n    case MODIFY_CANDIDATE_STATUS:\n      return {\n        ...state,\n        candidates: action.payload,\n      };\n    case GET_CANDIDATES_FILTERS: {\n      return {\n        ...state,\n        filters: action.payload,\n      };\n    }\n    case SET_CANDIDATES_FILTERS: {\n      return {\n        ...state,\n        filters: action.payload,\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n","import { TOGGLE_MODAL_VISIBILITY } from '../constants';\n\nconst initialState = {\n  candidateInfo: {\n    visible: false,\n    data: {},\n  },\n  candidatesFilters: {\n    visible: false,\n    data: {},\n  },\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_MODAL_VISIBILITY:\n      return {\n        ...state,\n        [action.payload.modal]: {\n          visible: action.payload.modalState,\n          data: action.payload.data,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport candidates from './candidates';\nimport modals from './modals';\n\nexport default combineReducers({\n  candidates,\n  modals,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers/rootReducer';\n\nexport default createStore(rootReducer, {}, composeWithDevTools(\n  applyMiddleware(thunk),\n));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/store';\nimport './css/index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}